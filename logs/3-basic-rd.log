
R version 4.0.2 (2020-06-22) -- "Taking Off Again"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # load packages
> library('tidyverse')
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.2     v purrr   0.3.4
v tibble  3.0.3     v dplyr   1.0.2
v tidyr   1.1.2     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
> 
> # tsls() taken from sem package from CRAN mirror
> # here https://github.com/cran/sem/blob/master/R/tsls.R
> source(here::here("analysis","tsls.R")) 
> 
> ## import data
> df_input <- read_csv(
+   here::here("output", "input_3.csv"),
+   col_types = cols(
+     # identifiers
+     patient_id = col_integer(),
+     practice_id = col_integer(),
+ 
+     # demographic / administrative
+     msoa = col_character(),
+     stp = col_character(),
+     region = col_character(),
+     imd = col_character(),
+     rural_urban = col_integer(),
+     care_home_type = col_character(),
+     care_home_tpp = col_logical(),
+     # care_home_primis = col_logical(),
+     stp = col_character(),
+ 
+     registered_at_latest = col_logical(),
+     has_follow_up_previous_year = col_logical(),
+ 
+     age = col_integer(),
+     sex = col_character(),
+     # ethnicity = col_character(),
+     # ethnicity_6_sus = col_character(),
+     ethnicity_16 = col_character()
+ 
+   )
+ )
> 
> dim(df_input)
[1] 10000    35
> class(df_input)
[1] "spec_tbl_df" "tbl_df"      "tbl"         "data.frame" 
> colnames(df_input)
 [1] "covid_vax_1_date"                   "covid_vax_2_date"                  
 [3] "covid_vax_3_date"                   "covid_vax_4_date"                  
 [5] "covid_vax_pfizer_1_date"            "covid_vax_pfizer_2_date"           
 [7] "covid_vax_pfizer_3_date"            "covid_vax_pfizer_4_date"           
 [9] "covid_vax_az_1_date"                "covid_vax_az_2_date"               
[11] "covid_vax_az_3_date"                "covid_vax_az_4_date"               
[13] "prior_positive_test_date"           "prior_primary_care_covid_case_date"
[15] "prior_admitted_for_covid_date"      "positive_test_1_date"              
[17] "primary_care_covid_case_1_date"     "admitted_1_date"                   
[19] "coviddeath_date"                    "death_date"                        
[21] "age"                                "sex"                               
[23] "bmi"                                "has_follow_up_previous_year"       
[25] "registered_at_latest"               "ethnicity_16"                      
[27] "practice_id"                        "msoa"                              
[29] "stp"                                "region"                            
[31] "imd"                                "rural_urban"                       
[33] "care_home_type"                     "care_home_tpp"                     
[35] "patient_id"                        
> sapply(df_input, class)
                  covid_vax_1_date                   covid_vax_2_date 
                            "Date"                             "Date" 
                  covid_vax_3_date                   covid_vax_4_date 
                            "Date"                             "Date" 
           covid_vax_pfizer_1_date            covid_vax_pfizer_2_date 
                            "Date"                             "Date" 
           covid_vax_pfizer_3_date            covid_vax_pfizer_4_date 
                            "Date"                             "Date" 
               covid_vax_az_1_date                covid_vax_az_2_date 
                            "Date"                             "Date" 
               covid_vax_az_3_date                covid_vax_az_4_date 
                            "Date"                             "Date" 
          prior_positive_test_date prior_primary_care_covid_case_date 
                            "Date"                             "Date" 
     prior_admitted_for_covid_date               positive_test_1_date 
                            "Date"                             "Date" 
    primary_care_covid_case_1_date                    admitted_1_date 
                            "Date"                             "Date" 
                   coviddeath_date                         death_date 
                            "Date"                             "Date" 
                               age                                sex 
                         "integer"                        "character" 
                               bmi        has_follow_up_previous_year 
                       "character"                          "logical" 
              registered_at_latest                       ethnicity_16 
                         "logical"                        "character" 
                       practice_id                               msoa 
                         "integer"                        "character" 
                               stp                             region 
                       "character"                        "character" 
                               imd                        rural_urban 
                       "character"                          "integer" 
                    care_home_type                      care_home_tpp 
                       "character"                          "logical" 
                        patient_id 
                         "integer" 
> 
> # greater than or equal to 80 indicator
> df_input <- df_input %>% 
+   mutate(gr80 = as.numeric(age >= 80))
> sum(is.na(df_input$gr80))
[1] 0
> table(df_input$gr80, useNA = "ifany")

   0    1 
9554  446 
> 
> # non-care home residents
> class(df_input$care_home_type)
[1] "character"
> table(df_input$care_home_type, useNA = "ifany")

   Carehome       Mixed Nursinghome        <NA> 
        498         564         490        8448 
> 
> class(df_input$care_home_tpp)
[1] "logical"
> table(df_input$care_home_tpp, useNA = "ifany")

FALSE  TRUE 
 9000  1000 
> 
> # class(df_input$care_home_primis)
> # table(df_input$care_home_primis, useNA = "ifany")
> 
> df_input <- df_input %>%
+   filter(care_home_tpp == FALSE)
> 
> # setup week start and end dates
> startweek <- c("2020-12-07","2020-12-14","2020-12-21","2020-12-28","2021-01-04",
+               "2021-01-11","2021-01-18","2021-01-25","2021-02-01","2021-02-08","2021-02-15")
> endweek   <- c("2020-12-14","2020-12-21","2020-12-28","2021-01-04","2021-01-11",
+               "2021-01-18","2021-01-25","2021-02-01","2021-02-08","2021-02-15","2021-02-22")
> 
> # initialise lists for results and plots
> results <- pt_plot <- vector("list", length(startweek))
> 
> for (i in 1:length(startweek)) {
+   
+   # print iteration
+   print(paste("Week", i))
+   print(paste("Start date", startweek[i]))
+   
+   # positive test in week
+   df_input <- df_input %>% 
+     mutate(pos_test_in_week = positive_test_1_date > startweek[i] &
+              positive_test_1_date <= endweek[i])
+   
+   class(df_input$pos_test_in_week)
+   table(df_input$pos_test_in_week)
+   
+   # pt_plot[[i]] <- df_input %>% 
+   #   drop_na(age, pos_test_in_week) %>%
+   #   filter(age >= 18) %>%
+   #   ggplot(aes(x = age, y = pos_test_in_week)) + 
+   #   geom_point() + 
+   #   theme_bw()
+   # 
+   # # save plots
+   # ggsave(
+   #   plot = pt_plot[[i]],
+   #   filename = paste0("pt_plot_week_", i, ".png"),
+   #   path = here::here("output"),
+   #   units = "cm",
+   #   height = 15,
+   #   width = 15
+   # )
+   
+   # fit IV estimator
+   ivfit <- try(tsls(as.numeric(pos_test_in_week) ~ age, ~ gr80, 
+                 data = df_input))
+   if (class(ivfit) != "try-error") {
+     results[[i]] <- ivfit
+     print(summary(ivfit))
+     print(cbind(coef(ivfit), confint.default(ivfit)))
+   }
+ }
[1] "Week 1"
[1] "Start date 2020-12-07"

 2SLS Estimates

Model Formula: as.numeric(pos_test_in_week) ~ age

Instruments: ~gr80

Residuals:
      Min.    1st Qu.     Median       Mean    3rd Qu.       Max. 
-0.0010408 -0.0007846 -0.0005651  0.0000000 -0.0003333  0.9998618 

                 Estimate    Std. Error  t value Pr(>|t|)
(Intercept)  1.040752e-03  1.175041e-03  0.88572   0.3758
age         -1.219677e-05  2.866641e-05 -0.42547   0.6705

Residual standard error: 0.0235537 on 7206 degrees of freedom

                                  2.5 %       97.5 %
(Intercept)  1.040752e-03 -1.262285e-03 3.343790e-03
age         -1.219677e-05 -6.838191e-05 4.398837e-05
[1] "Week 2"
[1] "Start date 2020-12-14"

 2SLS Estimates

Model Formula: as.numeric(pos_test_in_week) ~ age

Instruments: ~gr80

Residuals:
      Min.    1st Qu.     Median       Mean    3rd Qu.       Max. 
-0.0005204 -0.0003923 -0.0002825  0.0000000 -0.0001667  0.9995589 

                 Estimate    Std. Error  t value Pr(>|t|)
(Intercept)  5.203762e-04  8.308667e-04  0.62631  0.53113
age         -6.098387e-06  2.026991e-05 -0.30086  0.76353

Residual standard error: 0.0166547 on 7206 degrees of freedom

                                  2.5 %       97.5 %
(Intercept)  5.203762e-04 -1.108093e-03 0.0021488450
age         -6.098387e-06 -4.582668e-05 0.0000336299
[1] "Week 3"
[1] "Start date 2020-12-21"

 2SLS Estimates

Model Formula: as.numeric(pos_test_in_week) ~ age

Instruments: ~gr80

Residuals:
      Min.    1st Qu.     Median       Mean    3rd Qu.       Max. 
-0.0041370 -0.0020299 -0.0012129  0.0000000 -0.0004281  0.9994752 

                 Estimate    Std. Error  t value Pr(>|t|)
(Intercept) -4.641909e-04  1.762400e-03 -0.26339  0.79226
age          4.300145e-05  4.299569e-05  1.00013  0.31728

Residual standard error: 0.0353274 on 7206 degrees of freedom

                                  2.5 %       97.5 %
(Intercept) -4.641909e-04 -3.918432e-03 0.0029900501
age          4.300145e-05 -4.126856e-05 0.0001272715
[1] "Week 4"
[1] "Start date 2020-12-28"

 2SLS Estimates

Model Formula: as.numeric(pos_test_in_week) ~ age

Instruments: ~gr80

Residuals:
      Min.    1st Qu.     Median       Mean    3rd Qu.       Max. 
-0.0040048 -0.0021966 -0.0014954  0.0000000 -0.0007942  0.9998700 

                Estimate   Std. Error t value Pr(>|t|)
(Intercept) 5.618530e-05 1.947720e-03 0.02885  0.97699
age         3.690306e-05 4.751677e-05 0.77663  0.43740

Residual standard error: 0.0390421 on 7206 degrees of freedom

                                 2.5 %       97.5 %
(Intercept) 5.618530e-05 -3.761276e-03 0.0038736461
age         3.690306e-05 -5.622809e-05 0.0001300342
[1] "Week 5"
[1] "Start date 2021-01-04"

 2SLS Estimates

Model Formula: as.numeric(pos_test_in_week) ~ age

Instruments: ~gr80

Residuals:
     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. 
-0.007349 -0.005227 -0.004404  0.000000 -0.003580  0.997069 

                Estimate   Std. Error t value Pr(>|t|)
(Intercept) 2.714251e-03 3.316504e-03 0.81841  0.41315
age         4.331419e-05 8.090977e-05 0.53534  0.59243

Residual standard error: 0.0664794 on 7206 degrees of freedom

                                2.5 %       97.5 %
(Intercept) 2.714251e-03 -0.003785977 0.0092144802
age         4.331419e-05 -0.000115266 0.0002018944
[1] "Week 6"
[1] "Start date 2021-01-11"

 2SLS Estimates

Model Formula: as.numeric(pos_test_in_week) ~ age

Instruments: ~gr80

Residuals:
     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. 
-0.008178 -0.007743 -0.007370  0.000000 -0.006977  0.993728 

                 Estimate    Std. Error  t value Pr(>|t|)  
(Intercept)  8.178201e-03  4.263107e-03  1.91837 0.055104 .
age         -2.071888e-05  1.040032e-04 -0.19921 0.842101  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.0854541 on 7206 degrees of freedom

                                  2.5 %       97.5 %
(Intercept)  8.178201e-03 -0.0001773350 0.0165337371
age         -2.071888e-05 -0.0002245614 0.0001831236
[1] "Week 7"
[1] "Start date 2021-01-18"

 2SLS Estimates

Model Formula: as.numeric(pos_test_in_week) ~ age

Instruments: ~gr80

Residuals:
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
-0.02624 -0.02294 -0.01995  0.00000 -0.01696  0.98933 

                 Estimate    Std. Error  t value   Pr(>|t|)    
(Intercept)  0.0262435491  0.0069816159  3.75895 0.00017198 ***
age         -0.0001573071  0.0001703242 -0.92357 0.35573873    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.1399467 on 7206 degrees of freedom

                                  2.5 %       97.5 %
(Intercept)  0.0262435491  0.0125598333 0.0399272649
age         -0.0001573071 -0.0004911364 0.0001765222
[1] "Week 8"
[1] "Start date 2021-01-25"

 2SLS Estimates

Model Formula: as.numeric(pos_test_in_week) ~ age

Instruments: ~gr80

Residuals:
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
-0.05969 -0.04768 -0.04288  0.00000 -0.03832  0.96600 

                Estimate   Std. Error t value   Pr(>|t|)    
(Intercept) 0.0339990361 0.0101854142 3.33801 0.00084808 ***
age         0.0002401044 0.0002484844 0.96628 0.33393861    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.2041669 on 7206 degrees of freedom

                                2.5 %       97.5 %
(Intercept) 0.0339990361  0.014035991 0.0539620812
age         0.0002401044 -0.000246916 0.0007271249
[1] "Week 9"
[1] "Start date 2021-02-01"

 2SLS Estimates

Model Formula: as.numeric(pos_test_in_week) ~ age

Instruments: ~gr80

Residuals:
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
-0.1394 -0.1206 -0.1124  0.0000 -0.1043  0.9001 

                Estimate   Std. Error t value   Pr(>|t|)    
(Intercept) 0.0998741269 0.0158965042 6.28277 3.5194e-10 ***
age         0.0003695779 0.0003878127 0.95298    0.34063    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.3186459 on 7206 degrees of freedom

                                2.5 %      97.5 %
(Intercept) 0.0998741269  0.068717551 0.131030703
age         0.0003695779 -0.000390521 0.001129677
[1] "Week 10"
[1] "Start date 2021-02-08"

 2SLS Estimates

Model Formula: as.numeric(pos_test_in_week) ~ age

Instruments: ~gr80

Residuals:
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
-0.2693 -0.2551 -0.2419  0.0000 -0.2193  0.7850 

                 Estimate    Std. Error  t value Pr(>|t|)    
(Intercept)  0.2693248116  0.0215538730 12.49543   <2e-16 ***
age         -0.0005269632  0.0005258304 -1.00215   0.3163    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.432048 on 7206 degrees of freedom

                                 2.5 %       97.5 %
(Intercept)  0.2693248116  0.227079997 0.3115696264
age         -0.0005269632 -0.001557572 0.0005036455
[1] "Week 11"
[1] "Start date 2021-02-15"

 2SLS Estimates

Model Formula: as.numeric(pos_test_in_week) ~ age

Instruments: ~gr80

Residuals:
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
-0.5585 -0.5581  0.4416  0.0000  0.4419  0.4425 

                 Estimate    Std. Error  t value Pr(>|t|)    
(Intercept)  5.585129e-01  2.477821e-02 22.54049  < 2e-16 ***
age         -9.616687e-06  6.044917e-04 -0.01591  0.98731    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.49668 on 7206 degrees of freedom

                                 2.5 %      97.5 %
(Intercept)  5.585129e-01  0.509948500 0.607077302
age         -9.616687e-06 -0.001194399 0.001175165
> 
> proc.time()
   user  system elapsed 
  1.086   0.050   1.135 
